{
  "version": 3,
  "sources": ["../components/If.tsx", "../components/Else.tsx", "../components/Switch.tsx", "../components/Case.tsx", "../components/Default.tsx", "../components/For.tsx"],
  "sourcesContent": ["import React, { Children } from 'react';\r\n\r\nexport function If({ condition, children }: Props): JSX.Element {\r\n    const childrenArray = Children.toArray(children);\r\n    if (condition) return <>{childrenArray.filter((child: any) => child.type.name !== 'Else')}</>\r\n    return <>{childrenArray.find((child: any) => child.type.name === 'Else')}</>\r\n}\r\n\r\ninterface Props {\r\n    condition: boolean;\r\n    children: JSX.Element[] | JSX.Element;\r\n}", "import React from 'react';\r\n\r\nexport function Else({ children }: Props): JSX.Element {\r\n    return <>{children}</>;\r\n}\r\n\r\ninterface Props {\r\n    children: JSX.Element[] | JSX.Element;\r\n}\r\n", "import React, { Children } from 'react';\r\n\r\nexport function Switch({ condition, children }: Props): JSX.Element {\r\n    return <>{\r\n        Children.toArray(children)\r\n            .find((child: any) => child.type.name === 'Case' && child.props.condition === condition)\r\n        ?? Children.toArray(children).find((child: any) => child.type.name === 'Default')\r\n    }    </>\r\n}\r\n\r\ninterface Props {\r\n    condition: string | number | boolean;\r\n    children: JSX.Element[] | JSX.Element;\r\n}", "import React from 'react';\r\n\r\nexport function Case({ condition, children }: Props): JSX.Element {\r\n    return <>{children}</>\r\n}\r\n\r\ninterface Props {\r\n    condition: string | number | boolean;\r\n    children: JSX.Element[] | JSX.Element;\r\n}", "import React from 'react';\r\n\r\nexport function Default({ children }: Props): JSX.Element {\r\n    return <>{children}</>\r\n}\r\n\r\ninterface Props {\r\n    children: JSX.Element[] | JSX.Element;\r\n}", "import React from 'react';\r\n\r\nexport function For<T>({ collection, map, filter }: Props<T>) {\r\n    if (filter) collection = collection.filter(filter);\r\n    return collection.map(map)\r\n}\r\n\r\ninterface Props<T> {\r\n    collection: T[]\r\n    filter?: (item: T, index: number, array: T[]) => JSX.Element\r\n    map: (item: T, index: number, array: T[]) => JSX.Element\r\n}"],
  "mappings": ";AAAA;AAEO,YAAY,EAAE,WAAW,YAAgC;AAC5D,QAAM,gBAAgB,SAAS,QAAQ,QAAQ;AAC/C,MAAI;AAAW,WAAO,0DAAG,cAAc,OAAO,CAAC,UAAe,MAAM,KAAK,SAAS,MAAM,CAAE;AAC1F,SAAO,0DAAG,cAAc,KAAK,CAAC,UAAe,MAAM,KAAK,SAAS,MAAM,CAAE;AAC7E;;;ACNA;AAEO,cAAc,EAAE,YAAgC;AACnD,SAAO,4DAAG,QAAS;AACvB;;;ACJA;AAEO,gBAAgB,EAAE,WAAW,YAAgC;AAFpE;AAGI,SAAO,4DACH,gBAAS,QAAQ,QAAQ,EACpB,KAAK,CAAC,UAAe,MAAM,KAAK,SAAS,UAAU,MAAM,MAAM,cAAc,SAAS,MAD3F,YAEG,UAAS,QAAQ,QAAQ,EAAE,KAAK,CAAC,UAAe,MAAM,KAAK,SAAS,SAAS,GACnF,MAAI;AACT;;;ACRA;AAEO,cAAc,EAAE,WAAW,YAAgC;AAC9D,SAAO,4DAAG,QAAS;AACvB;;;ACJA;AAEO,iBAAiB,EAAE,YAAgC;AACtD,SAAO,4DAAG,QAAS;AACvB;;;ACFO,aAAgB,EAAE,YAAY,KAAK,UAAoB;AAC1D,MAAI;AAAQ,iBAAa,WAAW,OAAO,MAAM;AACjD,SAAO,WAAW,IAAI,GAAG;AAC7B;",
  "names": []
}
